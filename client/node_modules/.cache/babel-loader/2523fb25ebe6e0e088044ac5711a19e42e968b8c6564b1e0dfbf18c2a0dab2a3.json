{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sunpa\\\\Garep\\\\client\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { use, useState } from 'react';\nimport TodoItem from './TodoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Sample Task\",\n    completed: false\n  }, {\n    id: 2,\n    text: \"Sample Task 2\",\n    completed: false\n  }]);\n  const [text, setText] = useState('');\n  function addTask(text) {\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    setText('');\n  }\n  function deleteTask(id) {\n    setTasks(tasks.filter(task => task.id !== id));\n  }\n  function toggleCompleted(id) {\n    setTasks(tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      } else {\n        return task;\n      }\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [tasks.map(task => /*#__PURE__*/_jsxDEV(TodoItem, {\n      task: task,\n      deleteTask: deleteTask,\n      toggleCompleted: toggleCompleted\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask(text),\n      children: \" Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoList, \"w1cvA+6iJTem5exVFh9wXJonn0Y=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","use","useState","TodoItem","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","id","text","completed","setText","addTask","newTask","Date","now","deleteTask","filter","task","toggleCompleted","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sunpa/Garep/client/src/components/TodoList.js"],"sourcesContent":["import React, {use, useState} from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nfunction TodoList() {\r\n    const [tasks, setTasks] = useState([\r\n    {\r\n      id:1, text:\"Sample Task\", completed:false\r\n\r\n    },\r\n    {\r\n      id:2, text:\"Sample Task 2\", completed:false\r\n    },\r\n    ]);\r\n    const [text, setText] = useState('');\r\n    function addTask(text) {\r\n        const newTask = {\r\n            id: Date.now(),\r\n            text,\r\n            completed: false\r\n        };\r\n\r\n        setTasks([...tasks, newTask]);\r\n        setText('');\r\n    }\r\n    function deleteTask(id) {\r\n        setTasks(tasks.filter(task => task.id !== id));\r\n    }\r\n    function toggleCompleted(id)\r\n    {\r\n        setTasks(tasks.map(task=> {\r\n            if (task.id === id) {\r\n                return {...task, completed: !task.completed};\r\n            }\r\n            else{\r\n                return task;\r\n            }\r\n        }));\r\n    }\r\n    return (\r\n        <div className = \"todo-list\">\r\n            {tasks.map(task => (\r\n                <TodoItem \r\n                key={task.id} \r\n                task={task} \r\n                deleteTask={deleteTask} \r\n                toggleCompleted={toggleCompleted}/>\r\n            ))}\r\n        <input value={text}\r\n        onChange = {e => setText(e.target.value)} />\r\n            <button onClick = {() => addTask(text)}> Add</button>   \r\n        </div>\r\n    );  \r\n}\r\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,GAAG,EAAEC,QAAQ,QAAO,OAAO;AAC1C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CACnC;IACEQ,EAAE,EAAC,CAAC;IAAEC,IAAI,EAAC,aAAa;IAAEC,SAAS,EAAC;EAEtC,CAAC,EACD;IACEF,EAAE,EAAC,CAAC;IAAEC,IAAI,EAAC,eAAe;IAAEC,SAAS,EAAC;EACxC,CAAC,CACA,CAAC;EACF,MAAM,CAACD,IAAI,EAAEE,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,SAASY,OAAOA,CAACH,IAAI,EAAE;IACnB,MAAMI,OAAO,GAAG;MACZL,EAAE,EAAEM,IAAI,CAACC,GAAG,CAAC,CAAC;MACdN,IAAI;MACJC,SAAS,EAAE;IACf,CAAC;IAEDH,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEO,OAAO,CAAC,CAAC;IAC7BF,OAAO,CAAC,EAAE,CAAC;EACf;EACA,SAASK,UAAUA,CAACR,EAAE,EAAE;IACpBD,QAAQ,CAACD,KAAK,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACV,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD;EACA,SAASW,eAAeA,CAACX,EAAE,EAC3B;IACID,QAAQ,CAACD,KAAK,CAACc,GAAG,CAACF,IAAI,IAAG;MACtB,IAAIA,IAAI,CAACV,EAAE,KAAKA,EAAE,EAAE;QAChB,OAAO;UAAC,GAAGU,IAAI;UAAER,SAAS,EAAE,CAACQ,IAAI,CAACR;QAAS,CAAC;MAChD,CAAC,MACG;QACA,OAAOQ,IAAI;MACf;IACJ,CAAC,CAAC,CAAC;EACP;EACA,oBACIf,OAAA;IAAKkB,SAAS,EAAG,WAAW;IAAAC,QAAA,GACvBhB,KAAK,CAACc,GAAG,CAACF,IAAI,iBACXf,OAAA,CAACF,QAAQ;MAETiB,IAAI,EAAEA,IAAK;MACXF,UAAU,EAAEA,UAAW;MACvBG,eAAe,EAAEA;IAAgB,GAH5BD,IAAI,CAACV,EAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGsB,CACrC,CAAC,eACNvB,OAAA;MAAOwB,KAAK,EAAElB,IAAK;MACnBmB,QAAQ,EAAIC,CAAC,IAAIlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxCvB,OAAA;MAAQ4B,OAAO,EAAIA,CAAA,KAAMnB,OAAO,CAACH,IAAI,CAAE;MAAAa,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEd;AAACrB,EAAA,CAjDQD,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAkDjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}